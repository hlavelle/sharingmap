## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = ${PG_CONNECTION_STRING}
spring.datasource.username = ${PG_USERNAME}
spring.datasource.password = ${PG_PASSWORD}

server.port=8086

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.sql.init.mode=always

spring.mail.host = mail.hosting.reg.ru
spring.mail.port = 587
spring.mail.username = info@sharingmap.ru
spring.mail.password = ${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.ssl.trust = mail.hosting.reg.ru
spring.mail.properties.mail.smtp.connectiontimeout = 5000
spring.mail.properties.mail.smtp.timeout = 3000
spring.mail.properties.mail.smtp.writetimeout = 5000

sharingmap.app.auth = AUTH-TOKEN
sharingmap.app.refresh = REFRESH-TOKEN
sharingmap.app.secret = ${APP_SECRET}
sharingmap.app.expiration-auth = 600000
sharingmap.app.expiration-refresh = 31536000
sharingmap.app.path = /

debug = false
spring.mvc.validation=true

# Redirect log output to a file
logging.file.name=logs.log
# Log level for the console (set to OFF to disable console logging)
logging.level.root=INFO
logging.level.org.springframework.mail=INFO

telegram.bot.username=sharing_map_prod_moderation_bot
telegram.bot.token=${TG_BOT_PROD_SECRET_TOKEN}

cloud.storage.region=ru-central1
cloud.storage.bucket=${BUCKET_PROD}
cloud.storage.endpointUrl=storage.yandexcloud.net
